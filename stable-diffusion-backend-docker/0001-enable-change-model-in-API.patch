From 8c59d4f10e109d76d8bbe0d63dc9a21bd01e1cab Mon Sep 17 00:00:00 2001
From: warrenwjk <warrenwjk@qq.com>
Date: Tue, 27 Jun 2023 12:09:32 +0000
Subject: [PATCH] enable change model in API.

---
 modules/api/api.py    | 11 +++++++++++
 modules/api/models.py |  6 ++++++
 2 files changed, 17 insertions(+)

diff --git a/modules/api/api.py b/modules/api/api.py
index eee99bb..2173df2 100644
--- a/modules/api/api.py
+++ b/modules/api/api.py
@@ -205,10 +205,22 @@ class Api:
         self.add_api_route("/sdapi/v1/reload-checkpoint", self.reloadapi, methods=["POST"])
         self.add_api_route("/sdapi/v1/scripts", self.get_scripts_list, methods=["GET"], response_model=models.ScriptsList)
         self.add_api_route("/sdapi/v1/script-info", self.get_script_info, methods=["GET"], response_model=List[models.ScriptInfo])
+        self.add_api_route("/sdapi/v1/set-model", self.set_model, methods=["POST"], response_model=models.SetModelResponse)
 
         self.default_script_arg_txt2img = []
         self.default_script_arg_img2img = []
 
+    def set_model(self, name:models.SetModelRequest):
+        from modules import sd_models
+        m_info = name.info
+
+        info = sd_models.get_closet_checkpoint_match(m_info)
+        if info is None:
+            raise HTTPException(status_code=404, detail="Model not found")
+
+        sd_models.reload_model_weights(info=info)
+        return models.SetModelResponse()
+
     def add_api_route(self, path: str, endpoint, **kwargs):
         if shared.cmd_opts.api_auth:
             return self.app.add_api_route(path, endpoint, dependencies=[Depends(self.auth)], **kwargs)
diff --git a/modules/api/models.py b/modules/api/models.py
index 1ff2fb3..3bf2402 100644
--- a/modules/api/models.py
+++ b/modules/api/models.py
@@ -307,3 +307,9 @@ class ScriptInfo(BaseModel):
     is_alwayson: bool = Field(default=None, title="IsAlwayson", description="Flag specifying whether this script is an alwayson script")
     is_img2img: bool = Field(default=None, title="IsImg2img", description="Flag specifying whether this script is an img2img script")
     args: List[ScriptArg] = Field(title="Arguments", description="List of script's arguments")
+
+class SetModelRequest(BaseModel):
+    info: str = Field(default="", title="Info", description="Model name")
+
+class SetModelResponse(BaseModel):
+    pass
-- 
2.34.1

